/** printf-state-machine is MIT licensed, see /LICENSE. */
namespace HTL\PrintfStateMachine\_Private;

use namespace HH\Lib\Str;
use namespace HTL\PrintfStateMachine;
use function dechex, ord;

function to_method_name(string $char)[]: PrintfStateMachine\MethodName {
  $ord = ord($char);
  $display = Str\pad_left(dechex($ord), 2, '0');
  invariant(
    $ord <= 0x7f,
    'Characters that are not part of 7-bit ascii as not supported, got 0x%s.',
    $display,
  );
  invariant($ord !== 0xa, 'newline (%%\n) is not a supported.');
  return 'format_'.METHOD_NAMES[$ord] |> PrintfStateMachine\method_name($$);
}

const dict<int, string> METHOD_NAMES = dict[
  0x00 => '0x00',
  0x01 => '0x01',
  0x02 => '0x02',
  0x03 => '0x03',
  0x04 => '0x04',
  0x05 => '0x05',
  0x06 => '0x06',
  0x07 => '0x07',
  0x08 => '0x08',
  0x09 => '0x09',
  0x0a => '0x0a',
  0x0b => '0x0b',
  0x0c => '0x0c',
  0x0d => '0x0d',
  0x0e => '0x0e',
  0x0f => '0x0f',
  0x10 => '0x10',
  0x11 => '0x11',
  0x12 => '0x12',
  0x13 => '0x13',
  0x14 => '0x14',
  0x15 => '0x15',
  0x16 => '0x16',
  0x17 => '0x17',
  0x18 => '0x18',
  0x19 => '0x19',
  0x1a => '0x1a',
  0x1b => '0x1b',
  0x1c => '0x1c',
  0x1d => '0x1d',
  0x1e => '0x1e',
  0x1f => '0x1f',
  0x20 => '0x20',
  0x21 => '0x21',
  0x22 => '0x22',
  0x23 => '0x23',
  0x24 => '0x24',
  0x25 => '0x25',
  0x26 => '0x26',
  0x27 => '0x27',
  0x28 => '0x28',
  0x29 => '0x29',
  0x2a => '0x2a',
  0x2b => '0x2b',
  0x2c => '0x2c',
  0x2d => '0x2d',
  0x2e => '0x2e',
  0x2f => '0x2f',
  0x30 => '0x30',
  0x31 => '0x31',
  0x32 => '0x32',
  0x33 => '0x33',
  0x34 => '0x34',
  0x35 => '0x35',
  0x36 => '0x36',
  0x37 => '0x37',
  0x38 => '0x38',
  0x39 => '0x39',
  0x3a => '0x3a',
  0x3b => '0x3b',
  0x3c => '0x3c',
  0x3d => '0x3d',
  0x3e => '0x3e',
  0x3f => '0x3f',
  0x40 => '0x40',
  0x41 => 'upcase_a',
  0x42 => 'upcase_b',
  0x43 => 'upcase_c',
  0x44 => 'upcase_d',
  0x45 => 'upcase_e',
  0x46 => 'upcase_f',
  0x47 => 'upcase_g',
  0x48 => 'upcase_h',
  0x49 => 'upcase_i',
  0x4a => 'upcase_j',
  0x4b => 'upcase_k',
  0x4c => 'upcase_l',
  0x4d => 'upcase_m',
  0x4e => 'upcase_n',
  0x4f => 'upcase_o',
  0x50 => 'upcase_p',
  0x51 => 'upcase_q',
  0x52 => 'upcase_r',
  0x53 => 'upcase_s',
  0x54 => 'upcase_t',
  0x55 => 'upcase_u',
  0x56 => 'upcase_v',
  0x57 => 'upcase_w',
  0x58 => 'upcase_x',
  0x59 => 'upcase_y',
  0x5a => 'upcase_z',
  0x5b => '0x5b',
  0x5c => '0x5c',
  0x5d => '0x5d',
  0x5e => '0x5e',
  0x5f => '0x5f',
  0x60 => '0x60',
  0x61 => 'a',
  0x62 => 'b',
  0x63 => 'c',
  0x64 => 'd',
  0x65 => 'e',
  0x66 => 'f',
  0x67 => 'g',
  0x68 => 'h',
  0x69 => 'i',
  0x6a => 'j',
  0x6b => 'k',
  0x6c => 'l',
  0x6d => 'm',
  0x6e => 'n',
  0x6f => 'o',
  0x70 => 'p',
  0x71 => 'q',
  0x72 => 'r',
  0x73 => 's',
  0x74 => 't',
  0x75 => 'u',
  0x76 => 'v',
  0x77 => 'w',
  0x78 => 'x',
  0x79 => 'y',
  0x7a => 'z',
  0x7b => '0x7b',
  0x7c => '0x7c',
  0x7d => '0x7d',
  0x7e => '0x7e',
  0x7f => '0x7f',
];
